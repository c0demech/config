"custom 20181109
" dotfiles
" vimrc @tankmek
set nocompatible
filetype off
execute pathogen#infect()
set background=dark
" To enable 256 colors in vim,
" put this your .vimrc before setting the colorscheme:
set t_Co=256
colorscheme gruvbox
syntax on
let g:Powerline_symbols = "fancy"
set termencoding=utf-8 
set fileencoding=utf-8
scriptencoding utf-8
set encoding=utf-8
set scrolloff=5
set guifont=Fira\ Mono\ 9
set ttyfast
"set list
"set listchars=tab:>-,trail:- " show tabs and trailing whitespace
set nomodeline
"set cursorcolumn
set cursorline
set mouse=
set wmh=0
set backspace=indent,eol,start
set laststatus=2
set undofile
set history=800
set showmatch
set mat=5
" Cache
set backupdir=~/.vim/cache/
set directory=~/.vim/cache/
set undodir=~/.vim/cache/
set updatetime=100
" Tmux Background Fix
if &term =~ '256color'
  set t_ut=
endif
" -- editing -------------------------------------------------------------------
"set showmode      " always show the current editing mode
set modelines=0
set nomodeline
set nowrap        " don't wrap lines
set linebreak     " yet if enabled break at word boundaries

if has("multi_byte")  " if multi_byte is available,
  set showbreak=â†ª     " use pretty Unicode marker
else                  " otherwise,
  set showbreak=>     " use ASCII character
endif

set title
set ruler
set shiftwidth=4
set tabstop=4
set showtabline=4
set softtabstop=4
set expandtab
set preserveindent
set fo=tcrq
set nosmartindent
set autoindent
set foldmethod=syntax
set foldlevel=1
set ignorecase
set smartcase
set splitbelow
set hlsearch
set showcmd
set number
filetype plugin indent on
set t_vb=''
"
"********************************
"" http://vim.wikia.com
"********************************
"" "  20  : marks will be remembered for up to 20 previously edited files
" "  100 : will save up to 100 lines for each register
" " "  :20 : up to 20 lines of command-line history will be remembered
" " "  %   : saves and restores the buffer list
" " "  n... : where to save the viminfo files
set viminfo='30,\"150,:12,%,n~/.vim/cache/.viminfo

if has("mouse")
   set mouse= mousemodel=popup selectmode+=mouse
endif

augroup JumpCursorOnEdit
  au!
  autocmd BufReadPost *
    \ if expand("<afile>:p:h") !=? $TEMP |
    \   if line("'\"") > 1 && line("'\"") <= line("$") |
    \     let JumpCursorOnEdit_foo = line("'\"") |
    \     let b:doopenfold = 1 |
    \     if (foldlevel(JumpCursorOnEdit_foo) > foldlevel(JumpCursorOnEdit_foo - 1)) |
    \        let JumpCursorOnEdit_foo = JumpCursorOnEdit_foo - 1 |
    \        let b:doopenfold = 2 |
    \     endif |
    \     exe JumpCursorOnEdit_foo |
    \   endif |
    \ endif
  " Need to postpone using "zv" until after reading the modelines.
  autocmd BufWinEnter *
    \ if exists("b:doopenfold") |
    \   exe "normal zv" |
    \   if(b:doopenfold > 1) |
    \       exe  "+".1 |
    \   endif |
    \   unlet b:doopenfold |
    \ endif
augroup END

if version >= 700
  au InsertLeave * hi StatusLine term=reverse ctermfg=red    ctermbg=white gui=bold,reverse
  au InsertEnter * hi StatusLine term=reverse ctermfg=yellow ctermbg=white gui=undercurl guisp=yellow
endif

set statusline=[%n]\ %<%f%m%r\ %w\ %y\ \ <%{&fileformat}>%=[%o]\ %l,%c%V\/%L\ \ %P
hi CursorLine   cterm=NONE ctermbg=NONE ctermfg=yellow guibg=red guifg=white
hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white

" Spacing by FileType
autocmd FileType python setlocal ai ts=4 sw=4 et
autocmd FileType yaml setlocal ai ts=2 sw=2 et
autocmd FileType yml setlocal ai ts=2 sw=2 et


let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction
